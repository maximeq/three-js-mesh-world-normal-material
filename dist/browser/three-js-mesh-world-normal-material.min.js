!(function(e, r) {
"object" == typeof exports && "undefined" != typeof module
? (module.exports = r(require("three-full")))
: "function" == typeof define && define.amd
? define(["three-full"], r)
: (e.THREEMeshWorldNormalMaterial = r(e.THREE));
})(this, function(e) {
"use strict";
e = e && e.hasOwnProperty("default") ? e.default : e;
try {
!window ||
window.THREEExtraBuiltInUniforms ||
e.ExtraBuiltInUniforms ||
console.warn(
"Package three-js-extra-built-in-uniforms does not seem to be loaded (THREE.ExtraBuiltInUniforms is undefined). Don't forget to manage extra uniforms updates manually."
);
} catch (e) {}
function r(r) {
((r = r || {}).uniforms = e.UniformsUtils.merge([
e.ShaderLib.normal.uniforms,
{viewMatrixInverse: {value: new e.Matrix4()}}
])),
(r.vertexShader = e.ShaderLib.normal.vertexShader),
(r.fragmentShader =
"uniform mat4 viewMatrixInverse;\n" +
e.ShaderLib.normal.fragmentShader.replace(
"gl_FragColor = ",
"normal = normalize(mat3(viewMatrixInverse) * normal);\ngl_FragColor = "
)),
(this.bumpMap = null),
(this.bumpScale = 1),
(this.normalMap = null),
(this.normalMapType = e.TangentSpaceNormalMap),
(this.normalScale = new e.Vector2(1, 1)),
(this.displacementMap = null),
(this.displacementScale = 1),
(this.displacementBias = 0),
(this.wireframe = !1),
(this.wireframeLinewidth = 1),
(this.fog = !1),
(this.lights = !1),
(this.skinning = !1),
(this.morphTargets = !1),
(this.morphNormals = !1),
e.ShaderMaterial.call(this, r);
}
return (
(r.prototype = Object.create(e.ShaderMaterial.prototype)),
(r.prototype.constructor = r),
(r.updateMeshOnBeforeRender = function(e) {
let t = e.onBeforeRender;
e.onBeforeRender = function(e, a, i, n, o, l) {
t.call(this, e, a, i, n, o, l),
this.material instanceof r &&
this.material.uniforms.viewMatrixInverse.value.copy(i.matrixWorld);
};
}),
(e.MeshWorldNormalMaterial = r),
r
);
});
